# Generated by Django 3.0 on 2019-12-15 08:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('backend', '0004_courses'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled', models.ManyToManyField(related_name='enrolled', to='backend.Course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='Courses',
        ),
        migrations.RemoveField(
            model_name='tags',
            name='tags',
        ),
        migrations.AddField(
            model_name='resource',
            name='focus',
            field=models.ManyToManyField(related_name='focus', to='backend.Tags'),
        ),
        migrations.AddField(
            model_name='resource',
            name='prereqs',
            field=models.ManyToManyField(related_name='prereqs', to='backend.Tags'),
        ),
        migrations.AddField(
            model_name='resource',
            name='topics',
            field=models.ManyToManyField(related_name='topics', to='backend.Tags'),
        ),
        migrations.AddField(
            model_name='tags',
            name='tag_name',
            field=models.CharField(default=None, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='resources',
            field=models.ManyToManyField(related_name='courses', to='backend.Resource'),
        ),
    ]
